#+TITLE: Alacritty Configuration
#+AUTHOR: Sadik Saifi
#+DESCRIPTION: This is configuration file for alacritty terminal.
#+PROPERTY: header-args :tangle ./alacritty.yml
#+STARTUP: showeverything

* TABLE OF CONTENTS :toc:
- [[#about][About]]
- [[#environment][Environment]]
- [[#window][Window]]
- [[#font-configuration][Font Configuration]]
- [[#colors][Colors]]
- [[#cursor][Cursor]]
- [[#live-reloading][Live Reloading]]
- [[#shell][Shell]]

* About
Alacritty is a cross-platform, OpenGL terminal emulator.

* Environment
- Any items in the `env` entry below will be added as environment variables. Some entries may override variables set by alacritty itself.
- TERM variable : This value is used to set the `$TERM` environment variable for each instance of Alacritty. If it is not present, alacritty will check the local terminfo database and use `alacritty` if it is available, otherwise `xterm-256color` is used.

#+BEGIN_SRC yaml
env:
  TERM: alacritty
  WINIT_X11_SCALE_FACTOR: "1"
#+END_SRC

* Window
Window properties (changes require restart)

#+BEGIN_SRC yaml
window:
  dimensions:
    columns: 0
    lines: 0
  position:
    x: 0
    y: 0
  padding:
    x: 11
    y: 10
  dynamic_padding: true
  decorations: full
  opacity: 0.85
  startup_mode: Windowed
  title: Alacritty
  dynamic_title: false
  class:
    instance: Alacritty # Application instance name
    general: Alacritty # General application class
  decorations_theme_variant: None
scrolling:
  history: 10000
  multiplier: 3
#+END_SRC

* Font Configuration

#+BEGIN_SRC yaml
font:
  normal:
    family: JetBrainsMono Nerd Font
    style: Regular
  bold:
    family: JetBrainsMono Nerd Font
    style: Bold
  italic:
    family: JetBrainsMono Nerd Font
    style: Italic
  bold_italic:
    family: JetBrainsMono Nerd Font
    style: Bold Italic
  size: 15.0
  offset:
    x: 0
    y: 0
  glyph_offset:
    x: 0
    y: 0
  builtin_box_drawing: true
draw_bold_text_with_bright_colors: false
#+END_SRC

* Colors
- Allowed values are CellForeground/CellBackground, which reference the affected cell, or hexadecimal colors like #ff00ff.
- Default colors (Doom-one)
- The dimmed foreground color is calculated automatically if it is not present. If the bright foreground color is not set, or `draw_bold_text_with_bright_colors` is `false`, the normal foreground color will be used.

#+BEGIN_SRC yaml
colors:
  primary:
    background: '#282c34'
    foreground: '#bbc2cf'
    dim_foreground: '#828482'
    bright_foreground: '#eaeaea'
  cursor:
    text: CellBackground
    cursor: '#528bff'
  vi_mode_cursor:
    text: CellBackground
    cursor: CellForeground
  selection:
    text: CellForeground
    background: '#3e4451'
  normal:
      black:   '#1c1f24'
      red:     '#ff6c6b'
      green:   '#98be65'
      yellow:  '#da8548'
      blue:    '#51afef'
      magenta: '#c678dd'
      cyan:    '#5699af'
      white:   '#202328'
  bright:
    black:   '#5b6268'
    red:     '#da8548'
    green:   '#4db5bd'
    yellow:  '#ecbe7b'
    blue:    '#3071db'   # This is 2257a0 in Doom Emacs but I lightened it.
    magenta: '#a9a1e1'
    cyan:    '#46d9ff'
    white:   '#dfdfdf'
  dim:
    black:   '#131415'
    red:     '#864343'
    green:   '#777c44'
    yellow:  '#9e824c'
    blue:    '#556a7d'
    magenta: '#75617b'
    cyan:    '#5b7d78'
    white:   '#828482'
#+END_SRC

* Cursor
- Values for `shape`:
  - â–‡ Block
  - _ Underline
  - | Beam
- Values for `blinking`:
  - Never: Prevent the cursor from ever blinking
  - Off: Disable blinking by default
  - On: Enable blinking by default
  - Always: Force the cursor to always blink
- Specifying '0' will disable timeout for blinking.
- If `unfocused_hollow` is `true`, the cursor will be rendered as a hollow box when the
- Thickness of the cursor relative to the cell width as floating point number
from `0.0` to `1.0`.

#+BEGIN_SRC yaml
cursor:
  style:
    shape: Block
    blinking: Off
  vi_mode_style: None
  blink_interval: 750
  blink_timeout: 5
  unfocused_hollow: true
  thickness: 0.15
#+END_SRC

* Live Reloading
Live config reload (changes require restart)

#+BEGIN_SRC yaml
live_config_reload: true
#+END_SRC

* Shell
You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`. Entries in `shell.args` are passed unmodified as arguments to the shell.

Default:
  - (Linux/BSD/macOS) `$SHELL` or the user's login shell, if `$SHELL` is unset
  - (Windows) powershell

#+BEGIN_SRC yaml
shell:
  program: /bin/zsh
  args:
    - --login
#+END_SRC

